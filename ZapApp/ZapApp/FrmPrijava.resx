<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>